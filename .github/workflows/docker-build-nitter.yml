name: Docker build nitter image

on:
  workflow_dispatch:
  schedule:
    - cron: "0 * * * *"
  push:
    paths:
      - '.github/workflows/docker-build-nitter.yml'
      - 'nitter/**'

jobs:

  build:

    runs-on: ubuntu-latest

    steps:      
      - name: Get latest commit hash
        id: get-latest-commit
        run: |
          echo "commit=$(git ls-remote https://github.com/zedeus/nitter.git | head -n1 | awk '{print $1;}')" >> $GITHUB_ENV
        shell: bash

      - uses: actions/cache@v2
        id: cache
        with:
          path: nitter
          key: ${{ runner.os }}-v11-${{ env.commit }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          platforms: all

      - name: Check Out Repo
        uses: actions/checkout@v3
          
      - name: Check Out Repo goodtiding5/docker-nitter
        uses: actions/checkout@v3
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          repository: "goodtiding5/docker-nitter"
          ref: 'master'
          path: 'nitter-git'
      
      - name: Login to Quay.io
        if: steps.cache.outputs.cache-hit != 'true'
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: Set up Docker Buildx
        if: steps.cache.outputs.cache-hit != 'true'
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: latest

      - name: Set up build timestamp
        if: steps.cache.outputs.cache-hit != 'true'
        run: echo "timestamp=$(date +%Y%m%d)" >> $GITHUB_ENV

      - name: Copy override files for nitter
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          cp -R ./nitter/* ./nitter-git
        shell: bash

      - name: Apply normal patches
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          cd ./nitter-git
          patch Dockerfile < patches-normal/normal.patch
        shell: bash

      - name: Build and push docker image
        if: steps.cache.outputs.cache-hit != 'true'
        id: docker_build_new
        uses: docker/build-push-action@v3
        with:
          context: ./nitter-git
          file: ./nitter-git/Dockerfile
          platforms: linux/amd64,linux/arm64/v8,linux/arm/v7
          push: true
          tags: quay.io/unixfox/nitter:latest, quay.io/unixfox/nitter:build-${{ env.timestamp }}

      # - name: Apply custom patch
      #   if: steps.cache.outputs.cache-hit != 'true'
      #   run: |
      #     cd ./nitter-git
      #     patch Dockerfile < patches-custom/custom.patch
      #   shell: bash

      # - name: Build and push docker image custom
      #   if: steps.cache.outputs.cache-hit != 'true'
      #   id: docker_build_new_custom
      #   uses: docker/build-push-action@v3
      #   with:
      #     context: ./nitter-git
      #     file: ./nitter-git/Dockerfile
      #     platforms: linux/amd64,linux/arm64/v8,linux/arm/v7
      #     push: true
      #     tags: quay.io/unixfox/nitter-custom:latest, quay.io/unixfox/nitter-custom:build-${{ env.timestamp }}
