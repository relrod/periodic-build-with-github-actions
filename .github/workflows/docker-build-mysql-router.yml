name: Docker build mysql router image

on:
  workflow_dispatch:
  schedule:
    - cron: "0 * * * *"
  push:
    paths:
      - '.github/workflows/docker-build-mysql-router.yml'
      - 'mysql-router/**'

jobs:

  build:

    runs-on: ${{ (github.event_name == 'push') && fromJSON('[ "cirun-runner" ]') || 'ubuntu-latest' }}

    steps:      
      - name: Get latest commit hash
        id: get-latest-commit
        run: |
          echo "commit=$(git ls-remote https://github.com/mysql/mysql-docker.git | grep refs/heads/mysql-cluster | awk '{print $1;}')" >> $GITHUB_ENV
        shell: bash

      - name: Get latest mysql version
        id: get-latest-mysql-version
        run: |
          echo "$(curl -s -L "https://github.com/mysql/mysql-server/raw/8.0/MYSQL_VERSION")" >> $GITHUB_ENV
        shell: bash

      - uses: actions/cache@v2
        id: cache
        with:
          path: mysql-router
          key: ${{ runner.os }}-v1-${{ env.MYSQL_VERSION_MAJOR }}.${{ env.MYSQL_VERSION_MINOR }}.${{ env.MYSQL_VERSION_PATCH }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          platforms: linux/arm64
          
      - name: Check Out Repo mysql/mysql-docker
        uses: actions/checkout@v3
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          repository: "mysql/mysql-docker"
          ref: 'mysql-router'
          path: 'mysql-router-git'
      
      - name: Login to Quay.io
        if: steps.cache.outputs.cache-hit != 'true'
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: Set up Docker Buildx
        if: steps.cache.outputs.cache-hit != 'true'
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: latest

      - name: Fix gpg conflict
        if: steps.cache.outputs.cache-hit != 'true'
        run: sed -i 's/https:\/\/repo.mysql.com\/mysql-community-release-el7.rpm/https:\/\/repo.mysql.com\/mysql80-community-release-el7.rpm/' ./mysql-router-git/8.0/Dockerfile

      - name: Set up build timestamp
        if: steps.cache.outputs.cache-hit != 'true'
        run: echo "timestamp=$(date +%Y%m%d)" >> $GITHUB_ENV

      - name: Build and push docker image
        if: steps.cache.outputs.cache-hit != 'true'
        id: docker_build_new
        uses: docker/build-push-action@v3
        with:
          context: ./mysql-router-git/8.0
          file: ./mysql-router-git/8.0/Dockerfile
          platforms: linux/amd64,linux/arm64/v8
          push: true
          tags: |
            quay.io/unixfox/mysql-router:latest
            quay.io/unixfox/mysql-router:${{ env.MYSQL_VERSION_MAJOR }}
            quay.io/unixfox/mysql-router:${{ env.MYSQL_VERSION_MAJOR }}.${{ env.MYSQL_VERSION_MINOR }}
            quay.io/unixfox/mysql-router:${{ env.MYSQL_VERSION_MAJOR }}.${{ env.MYSQL_VERSION_MINOR }}.${{ env.MYSQL_VERSION_PATCH }}
            quay.io/unixfox/mysql-router:${{ env.MYSQL_VERSION_MAJOR }}.${{ env.MYSQL_VERSION_MINOR }}.${{ env.MYSQL_VERSION_PATCH }}-build-${{ env.timestamp }}
          build-args: |
            MYSQL_SERVER_PACKAGE=mysql-community-client-${{ env.MYSQL_VERSION_MAJOR }}.${{ env.MYSQL_VERSION_MINOR }}.${{ env.MYSQL_VERSION_PATCH }}
            MYSQL_ROUTER_PACKAGE=mysql-router-community-${{ env.MYSQL_VERSION_MAJOR }}.${{ env.MYSQL_VERSION_MINOR }}.${{ env.MYSQL_VERSION_PATCH }}